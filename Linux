
#!/usr/bin/env bash

# Check for root access
if [ "$EUID" -ne 0 ]
then
    echo "Please run this script with sudo"
    exit
fi

# Check for or create sysadmin research directory
[ ! -d /home/sysadmin/research ] && mkdir /home/sysadmin/research
echo "created ~/research directory"

# Copy files from instructor archive user to sysadmin research directory
cp -R /home/instructor/Documents/research/* /home/sysadmin/research
echo "copied needed files to ~/research"

# Correct ownership and permissions on the sysadmin research directory
chown -R sysadmin:sysadmin /home/sysadmin/research/
chmod -R 0644 /home/sysadmin/research/
echo "set owner and permissions"

# Copy over the motd file
cp /home/instructor/research/motd /etc/

# Install needed packages 
apt -y install john chkrootkit lynis &> /dev/null

echo "Completed setup for day 2"

#####################################################################################

#!/usr/bin/env bash

# Check for root access
if [ "$EUID" -ne 0 ]
then
    echo "Please run this script with sudo"
    exit
fi

# Change apache2 port
sed -i 's~\<Listen 80\>~Listen 8080~g' /etc/apache2/ports.conf

# Start needed processes
systemctl start vsftpd xinetd dovecot apache2 smbd

# Set SUID bit for the `find` command
chmod u+s $(which find)

# Set user with erroneous UID
sed -i 's~^adam:x:.*~adam:x:0:0:/home/adam:/bin/sh~g' /etc/passwd

echo "Completed setup for day 3"

#####################################################################################
#!/bin/bash

sudo apt install -y ruby-full ruby ruby-dev

sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

sudo apt -y update

sudo apt -y install gcc-9

################################################################################
#!/bin/bash

# This script will install Google Chrome and the Cookie-Editor extension

# Install Chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

sudo dpkg -i google-chrome-stable_current_amd64.deb

# Install Chrome extensions function
install_chrome_extension () {
  preferences_dir_path="/opt/google/chrome/extensions"
  pref_file_path="$preferences_dir_path/$1.json"
  upd_url="https://clients2.google.com/service/update2/crx"
  mkdir -p "$preferences_dir_path"
  echo "{" > "$pref_file_path"
  echo "  \"external_update_url\": \"$upd_url\"" >> "$pref_file_path"
  echo "}" >> "$pref_file_path"
  echo Added \""$pref_file_path"\" ["$2"]
}

# if ! which "google-chrome" ; then
#   wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
#   | sudo apt-key add -
#   echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' \
#   | sudo tee /etc/apt/sources.list.d/google-chrome.list
#   sudo apt-get update
#   sudo apt install google-chrome-stable
# else
#   echo Chrome already installed
# fi

# Extension positionals for function (first is from ext.  URL, second is ext. name)
# install_chrome_extension "cfhdojbkjhnklbpkdaibdccddilifddb" "Adblock Plus"
install_chrome_extension "hlkenndednhfkekhgcdicdfddnkalmdm" "Cookie-Editor"
# install_chrome_extension "pgjjikdiikihdfpoppgaidccahalehjh" "Speedtest by Ookla"

###########################################################################################

#!/bin/bash

sudo falco service stop #if installed locally on Linux as a non-container
docker container rm falco
# docker pull falcosecurity/falco
# docker run -i -t \
#     --name falco \
#     --privileged \
#     -v /var/run/docker.sock:/host/var/run/docker.sock \
#     -v /dev:/host/dev \
#     -v /proc:/host/proc:ro \
#     -v /boot:/host/boot:ro \
#     -v /lib/modules:/host/lib/modules:ro \
#     -v /usr:/host/usr:ro \
#     falcosecurity/falco

docker run \
  --interactive \
  --privileged \
  --tty \
  --name falco \
  --volume /var/run/docker.sock:/host/var/run/docker.sock \
  --volume /dev:/host/dev \
  --volume /proc:/host/proc:ro \
  --volume /boot:/host/boot:ro \
  --volume /lib/modules:/host/lib/modules:ro \
  --volume /usr:/host/usr:ro \
  falcosecurity/falco:0.19.0
  
  ##############################################################################
  
  #!/bin/bash

# Setup sysadmin database activity
#cd /home/sysadmin/Cybersecurity-Lesson-Plans/14-Web_Dev/deploying_databases/
# Bringing down any previous activity docker-compose sessions
docker-compose down > /dev/null 2>&1
# Remove containers and volumes in /home/sysadmin/Cybersecurity-Lesson-Plans/14-Web_Dev/deploying_databases/
docker-compose rm -v -f > /dev/null 2>&1
docker volume rm deploying_databases_db > /dev/null 2>&1
# Bring up the container set to populate SQL server
docker-compose up -d
# Populating databases using db mounted volume
echo "Populating Databases"
docker exec -it activitydb bash -c "chmod +x /home/entries.sh; /home/entries.sh" #> /dev/null 2>&1
# Bring down container set but keep the volumes
docker-compose down

#################################################################################
/home/sysadmin/Cybersecurity-Lesson-Plans/14-Web_Dev/deploying_databases/queries/entries.sh
#!/bin/bash

# Wait for MySQL container port to be active
echo "Short wait to avoid race conditions"
sleep 7

# Clear employees table in case it exists
mysql -u admin -p123456 -D goodcorpdb -Bse \
"DROP TABLE IF EXISTS employees; \
CREATE TABLE employees ( \
id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, \
firstname VARCHAR(30) NOT NULL, \
lastname VARCHAR(30) NOT NULL, \
email VARCHAR(50) NOT NULL, \
department VARCHAR(50) NOT NULL, \
date_added TIMESTAMP ); \
INSERT INTO employees (firstname, lastname, email, department) \
VALUES ('Bob', 'Brew', 'bbrew@goodcorp.net', 'Sales and Marketing'); \
INSERT INTO employees (firstname, lastname, email, department) \
VALUES ('Andrew', 'Americano', 'aamericano@goodcorp.net', 'Research and Development'); \
INSERT INTO employees (firstname, lastname, email, department) \
VALUES ('Caroline', 'Cortado', 'ccortado@goodcorp.net', 'Human Resources'); \
INSERT INTO employees (firstname, lastname, email, department) \
VALUES ('Deborah', 'Doppio', 'ddoppio@goodcorp.net', 'Operations'); \
INSERT INTO employees (firstname, lastname, email, department) \
VALUES ('Emma', 'Espresso', 'eespresso@goodcorp.net', 'Research and Development');"

##########################################################################################



